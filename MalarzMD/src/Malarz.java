
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import javax.swing.JColorChooser;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Admin
 */
public class Malarz extends javax.swing.JFrame {

    Color brushColor = Color.BLACK;
    int old_mouse_x = 0;
    int old_mouse_y = 0;
    Graphics2D graphics2D;
    boolean draw_figure = false;
    int first_mouse_x = 0;
    int first_mouse_y = 0;
    int old_width = 0;
    int old_height = 0;
    
    public Malarz() {
        initComponents();
    }
    
    public void save()
    {
        BufferedImage bImg = new BufferedImage(Canvas.getWidth(), Canvas.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D cg = bImg.createGraphics();
        Canvas.paintAll(cg);
        String SaveName = txtSaveName.getText();
        try {
                if (ImageIO.write(bImg, "png", new File("./" + SaveName + ".png")))
                {
                    System.out.println("Zapisano jako " + SaveName + ".png");
                }
        } catch (IOException e) {
                e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Settings = new javax.swing.JPanel();
        lblTool = new javax.swing.JLabel();
        cbTool = new javax.swing.JComboBox<>();
        lblThickness = new javax.swing.JLabel();
        cbThickness = new javax.swing.JComboBox<>();
        btnColor = new javax.swing.JButton();
        txtColor = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtSaveName = new javax.swing.JTextField();
        lblPNG = new javax.swing.JLabel();
        Canvas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTool.setText("Narzędzie");

        cbTool.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ołówek", "Prostokąt", "Linia", "Koło", "Trójkąt" }));

        lblThickness.setText("Grubość");

        cbThickness.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1px", "2px", "3px", "4px", "5px" }));

        btnColor.setText("Kolor");
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });

        txtColor.setEditable(false);
        txtColor.setBackground(new java.awt.Color(0, 0, 0));
        txtColor.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtColor.setSelectionColor(new java.awt.Color(0, 0, 0));

        btnClear.setText("Wyczyść");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        btnSave.setText("Zapisz jako...");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblPNG.setText(".png");

        javax.swing.GroupLayout SettingsLayout = new javax.swing.GroupLayout(Settings);
        Settings.setLayout(SettingsLayout);
        SettingsLayout.setHorizontalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTool)
                    .addComponent(cbTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addComponent(cbThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSaveName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPNG)
                        .addGap(32, 32, 32)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18))
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addComponent(lblThickness)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        SettingsLayout.setVerticalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTool)
                    .addComponent(lblThickness))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnColor)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear)
                    .addComponent(btnSave)
                    .addComponent(txtSaveName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPNG))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Canvas.setBackground(new java.awt.Color(255, 255, 255));
        Canvas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                CanvasMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                CanvasMouseMoved(evt);
            }
        });
        Canvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CanvasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CanvasMousePressed(evt);
            }
        });

        javax.swing.GroupLayout CanvasLayout = new javax.swing.GroupLayout(Canvas);
        Canvas.setLayout(CanvasLayout);
        CanvasLayout.setHorizontalGroup(
            CanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        CanvasLayout.setVerticalGroup(
            CanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Settings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
        brushColor = JColorChooser.showDialog(null, "Wybierz kolor", brushColor);
        txtColor.setBackground(brushColor);
    }//GEN-LAST:event_btnColorActionPerformed

    private void CanvasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanvasMousePressed
        old_mouse_x = evt.getX();
        old_mouse_y = evt.getY();
    }//GEN-LAST:event_CanvasMousePressed

    private void CanvasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanvasMouseDragged
        if (cbTool.getSelectedIndex() == 0) {
           graphics2D = (Graphics2D)Canvas.getGraphics();
           if (graphics2D != null) {
               graphics2D.setColor(brushColor);
               graphics2D.setStroke(new BasicStroke(cbThickness.getSelectedIndex()+1));
               graphics2D.drawLine(old_mouse_x, old_mouse_y, evt.getX(), evt.getY());
           }
           old_mouse_x = evt.getX();
           old_mouse_y = evt.getY();
       }
    }//GEN-LAST:event_CanvasMouseDragged

    private void CanvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanvasMouseClicked
        if (cbTool.getSelectedIndex() > 0 && draw_figure == false) {
            draw_figure = true;
            first_mouse_x = old_mouse_x;
            first_mouse_y = old_mouse_y;
            old_width = 0;
            old_height = 0;
        } else if (cbTool.getSelectedIndex() > 0 && cbTool.getSelectedIndex() < 4 && draw_figure == true) {
            draw_figure = false;
        } else if (evt.getX() - first_mouse_x > -10 || evt.getX() - first_mouse_x < 10 && evt.getY() - first_mouse_y > -10 || evt.getY() - first_mouse_y < 10 && cbTool.getSelectedIndex() == 4 && draw_figure == true) {
            draw_figure = false;
        } else if (cbTool.getSelectedIndex() == 4 && draw_figure == true) {
            draw_figure = true;
        }
    }//GEN-LAST:event_CanvasMouseClicked

    private void CanvasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanvasMouseMoved
        if (draw_figure == true) {
            int a;
            int b;
            if (first_mouse_x < evt.getX()) {
                a = first_mouse_x;
            } else {
                a = evt.getX();
            }
            if (first_mouse_y < evt.getY()) {
                b = first_mouse_y;
            } else {
                b = evt.getY();
            }
            
            int width = evt.getX() - a;
            int height = evt.getY() - b;
            
            graphics2D = (Graphics2D)Canvas.getGraphics();
            
            if (cbTool.getSelectedIndex() == 1) {
                graphics2D.setColor(Color.WHITE);
                graphics2D.fillRect(first_mouse_x, first_mouse_y, old_width, old_height);
                graphics2D.setColor(brushColor);
                graphics2D.fillRect(first_mouse_x, first_mouse_y, width, height);
            }
            
            if (cbTool.getSelectedIndex() == 2) {
                graphics2D.setColor(Color.WHITE);
                graphics2D.drawLine(first_mouse_x, first_mouse_y, old_mouse_x, old_mouse_y);
                graphics2D.setColor(brushColor);
                graphics2D.drawLine(first_mouse_x, first_mouse_y, evt.getX(), evt.getY());
            }
            
            if (cbTool.getSelectedIndex() == 3) {
                graphics2D.setColor(Color.WHITE);
                graphics2D.fillOval(first_mouse_x, first_mouse_y, old_width, old_height);
                graphics2D.setColor(brushColor);
                graphics2D.fillOval(first_mouse_x, first_mouse_y, width, height);
            }
            
            if (cbTool.getSelectedIndex() == 4) {                
                graphics2D.setColor(Color.WHITE);
                graphics2D.drawPolygon(new int[] {first_mouse_x, (first_mouse_x + old_mouse_x)/2, old_mouse_x}, new int[] {old_mouse_y, first_mouse_y, old_mouse_y}, 3);
                graphics2D.setColor(brushColor);
                graphics2D.drawPolygon(new int[] {first_mouse_x, (first_mouse_x + evt.getX())/2, evt.getX()}, new int[] {evt.getY(), first_mouse_y, evt.getY()}, 3);
            }
            
            old_mouse_x = evt.getX();
            old_mouse_y = evt.getY();
            old_width = width;
            old_height = height;
        }
    }//GEN-LAST:event_CanvasMouseMoved

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        graphics2D = (Graphics2D)Canvas.getGraphics();
        graphics2D.setColor(Color.WHITE);
        graphics2D.fillRect(0, 0, 10000, 10000);
    }//GEN-LAST:event_btnClearMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        save();
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Malarz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Malarz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Malarz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Malarz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Malarz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Canvas;
    private javax.swing.JPanel Settings;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnColor;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbThickness;
    private javax.swing.JComboBox<String> cbTool;
    private javax.swing.JLabel lblPNG;
    private javax.swing.JLabel lblThickness;
    private javax.swing.JLabel lblTool;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtSaveName;
    // End of variables declaration//GEN-END:variables
}
